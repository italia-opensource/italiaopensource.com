name: Build Website

on:
  repository_dispatch:
    types:
      - build-website
      - build-website-command
  workflow_dispatch:
    inputs:
      hash-commit:
        description: "Hash commit of awesome-italia-opensource"
        required: false
        default: ""

# Permissions for terramform-init action
permissions:
  id-token: write
  contents: read

env:
  WORKSPACE: "production"

jobs:
  build-website:
    name: Build
    runs-on: ubuntu-22.04
    steps:
      - name: Load ENV
        run: |
          branch_name=feat/build-website-${{ github.event_name }}-${{ github.sha }}
          commit_sha=${{ github.sha }}

          if [ "${{ inputs.hash-commit }}" != "" ] ; then
            branch_name=feat/build-website-awesome-${{ inputs.hash-commit }}
          fi

          if [ "${{ github.event.client_payload.slash_command.args.named.pr_sha }}" != "" ]; then
            commit_sha=${{ github.event.client_payload.slash_command.args.named.pr_sha }}
          fi

          echo "commit_sha=${commit_sha}" >> $GITHUB_OUTPUT
          echo "branch_name=${branch_name}" >> $GITHUB_OUTPUT

      - name: Check out code
        uses: actions/checkout@v4
        with:
          ref: ${{ env.COMMIT_SHA }}
          fetch-depth: 0

      - name: Setup Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"
          cache: "pip"

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version-file: "website/.nvmrc"
          cache-dependency-path: website/yarn.lock
          cache: "yarn"

      - name: Terraform Init
        id: terraform
        uses: ./.github/workflows/actions/terraform-init
        timeout-minutes: 5
        with:
          WORKSPACE: ${{ env.WORKSPACE }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_ACCOUNT_ID: ${{ secrets.AWS_ACCOUNT_ID }}
          AWS_ROLE_NAME: ${{ secrets.AWS_ROLE_NAME }}
          AWS_TERRAFORM_STATE_BUCKET: ${{ secrets.AWS_TERRAFORM_STATE_BUCKET }}

      - name: Build
        id: build
        timeout-minutes: 5
        run: |
          make setup-website VIRTUAL_ENV=false
          make download
          make build

          if [[ "$(git status -s)" == "" ]] ; then 
            echo "has_changed=false" >> "$GITHUB_OUTPUT"
          else
            echo "has_changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Create Pull Request
        if: ${{ steps.build.outputs.has_changed == 'true' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.ACTION_WORKFLOWS }}
          title: "feat(website): update awesome data"
          body: "Update awesome data from: ${{ github.event_name }}"
          commit-message: "Update awesome data from: ${{ github.event_name }}"
          author: "FabrizioCafolla <${{ secrets.ACTION_EMAIL }}>"
          add-paths: |
            website/src/*
            website/database/*

      - name: Update comment
        if: ${{ success() && github.event.client_payload.slash_command.args.named.comment_id }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.ACTION_WORKFLOWS }}
          comment-id: ${{ github.event.client_payload.slash_command.args.named.comment_id }}
          reactions: hooray

      - name: Failure
        if: ${{ failure() && github.event.client_payload.slash_command.args.named.comment_id }}
        uses: peter-evans/create-or-update-comment@v4
        with:
          token: ${{ secrets.ACTION_WORKFLOWS }}
          comment-id: ${{ github.event.client_payload.slash_command.args.named.comment_id }}
          body: |
            :warning: Deployment failed. See #[${{ github.run_number }}](https://github.com/italia-opensource/italiaopensource.com/actions/runs/${{ github.run_id }}) for more details.
